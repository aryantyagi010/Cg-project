class Clock extends Domel {

	constructor(canvasSel) {
	  super(canvasSel);
	}
	drawLand(){
	  const canvas = this.el;
	  const ctx = canvas.getContext('2d');
	  // #layer1
	  
  // #rect1
  ctx.beginPath();
  ctx.fillStyle = 'rgb(0, 255, 255)';
  ctx.lineWidth = 0.070004;
  ctx.rect(-0.956372, 0.000000, 705.802490, 292.649840);
  ctx.fill();
  
  // #rect2
  ctx.beginPath();
  ctx.fillStyle = 'rgb(0, 128, 0)';
  ctx.lineWidth = 0.070004;
  ctx.rect(-0.956372, 290.737090, 706.758910, 227.616550);
  ctx.fill();
  
  // #path2
  ctx.beginPath();
  ctx.fillStyle = 'rgb(0, 255, 255)';
  ctx.lineWidth = 0.070004;
  ctx.moveTo(172.146960, 289.780720);
  ctx.bezierCurveTo(76.509762, 516.440870, 33.473021, 516.440870, 33.473021, 516.440870);
  ctx.lineTo(170.234220, 518.353620);
  ctx.lineTo(306.039040, 289.780720);
  ctx.closePath();
  ctx.fill();
  
	  
   
	}
  
  
	drawtree(){
  
	  // #layer10
	  
  // #path1-0
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(28, 165, 56)';
	  ctx.lineWidth = 0.058467;
	  ctx.moveTo(657.410570, 224.982520);
	  ctx.lineTo(657.410570, 224.478320);
	  ctx.bezierCurveTo(660.712680, 205.991080, 651.501520, 186.999650, 620.739710, 191.537420);
	  ctx.bezierCurveTo(618.654170, 191.873560, 617.437600, 177.924100, 602.143600, 174.898910);
	  ctx.bezierCurveTo(595.713160, 173.722450, 583.026090, 173.554390, 576.074270, 174.730840);
	  ctx.bezierCurveTo(566.863110, 176.243430, 558.347130, 183.470270, 553.654660, 194.226480);
	  ctx.lineTo(548.962170, 194.226480);
	  ctx.bezierCurveTo(531.756420, 193.218080, 521.154900, 208.007870, 523.761820, 223.469930);
	  ctx.bezierCurveTo(524.109410, 224.982520, 523.935620, 226.495110, 524.109410, 228.007700);
	  ctx.bezierCurveTo(517.157600, 232.545480, 510.727160, 242.797490, 510.727160, 252.881440);
	  ctx.bezierCurveTo(510.727160, 267.671230, 522.719050, 278.259370, 535.406120, 278.259370);
	  ctx.lineTo(535.579920, 278.259370);
	  ctx.bezierCurveTo(534.015760, 293.553360, 548.266990, 299.099530, 559.737490, 299.099530);
	  ctx.lineTo(581.983320, 299.099530);
	  ctx.bezierCurveTo(585.111640, 299.099530, 588.066170, 298.427270, 590.846890, 297.250800);
	  ctx.bezierCurveTo(593.975210, 298.763400, 597.277330, 299.771790, 600.927030, 299.771790);
	  ctx.lineTo(623.346650, 299.771790);
	  ctx.bezierCurveTo(634.817160, 299.771790, 644.549710, 290.696240, 647.504220, 278.259370);
	  ctx.bezierCurveTo(647.504220, 278.259370, 671.488010, 291.368500, 677.397050, 253.385630);
	  ctx.bezierCurveTo(680.177780, 237.251320, 668.707280, 226.663170, 657.410570, 224.982520);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path2-3
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(101, 50, 11)';
	  ctx.lineWidth = 0.058467;
	  ctx.moveTo(636.555110, 262.797310);
	  ctx.bezierCurveTo(635.686130, 273.721590, 629.081900, 274.225790, 626.301170, 273.889660);
	  ctx.bezierCurveTo(627.170150, 272.713200, 628.039120, 271.368680, 628.734310, 269.856080);
	  ctx.bezierCurveTo(633.426780, 260.948590, 628.734310, 250.696580, 630.124670, 250.192380);
	  ctx.bezierCurveTo(636.728910, 246.999130, 632.905400, 237.083250, 632.905400, 237.083250);
	  ctx.lineTo(631.341250, 237.419380);
	  ctx.bezierCurveTo(633.426780, 242.629420, 631.688840, 246.326870, 628.386720, 248.007520);
	  ctx.bezierCurveTo(620.044540, 252.041110, 616.221040, 243.637820, 616.221040, 243.637820);
	  ctx.lineTo(615.525850, 245.486540);
	  ctx.bezierCurveTo(618.654170, 252.377240, 627.517750, 252.377240, 627.517750, 252.377240);
	  ctx.lineTo(627.691530, 259.267930);
	  ctx.bezierCurveTo(621.434900, 267.503160, 618.654170, 259.267930, 618.654170, 259.267930);
	  ctx.lineTo(618.306570, 261.452790);
	  ctx.bezierCurveTo(623.520450, 270.024140, 627.170150, 262.461190, 627.170150, 262.461190);
	  ctx.bezierCurveTo(626.822560, 268.847690, 623.172860, 272.713200, 619.175560, 275.066120);
	  ctx.bezierCurveTo(611.354760, 279.771960, 603.186370, 278.595500, 603.186380, 278.595500);
	  ctx.bezierCurveTo(607.531260, 275.570310, 609.095410, 272.209000, 608.400240, 267.503160);
	  ctx.bezierCurveTo(607.705050, 262.629250, 605.445710, 263.133450, 601.100830, 260.108270);
	  ctx.bezierCurveTo(598.320100, 258.259540, 596.755940, 255.738550, 596.234550, 251.032720);
	  ctx.bezierCurveTo(595.539360, 246.326870, 602.491190, 242.965550, 602.491190, 242.965550);
	  ctx.lineTo(601.622210, 241.452960);
	  ctx.bezierCurveTo(589.108940, 245.990730, 595.539360, 257.587280, 595.539360, 257.587280);
	  ctx.bezierCurveTo(591.194480, 257.755340, 590.673090, 257.755340, 588.239950, 251.704970);
	  ctx.bezierCurveTo(585.806820, 245.654610, 579.897780, 249.352060, 579.897780, 249.352060);
	  ctx.lineTo(580.245370, 250.528520);
	  ctx.bezierCurveTo(584.764050, 247.503340, 586.675800, 254.057900, 586.675800, 254.057900);
	  ctx.bezierCurveTo(587.892370, 261.788920, 595.191780, 261.284720, 595.191780, 261.284720);
	  ctx.bezierCurveTo(608.052650, 263.973780, 599.362880, 282.461020, 588.761340, 279.771960);
	  ctx.bezierCurveTo(572.424570, 275.570310, 575.031500, 271.872870, 575.031500, 271.872870);
	  ctx.bezierCurveTo(584.764050, 266.662830, 577.638430, 258.427610, 577.638430, 258.427610);
	  ctx.lineTo(576.074270, 259.604070);
	  ctx.bezierCurveTo(581.288140, 261.620860, 576.074270, 271.704800, 570.686620, 268.847690);
	  ctx.bezierCurveTo(564.777570, 265.654440, 569.817630, 259.772130, 569.817630, 259.772130);
	  ctx.lineTo(568.079680, 260.108270);
	  ctx.bezierCurveTo(562.865820, 268.343490, 572.250770, 271.872870, 572.250770, 271.872870);
	  ctx.bezierCurveTo(572.598370, 275.066120, 573.988730, 277.250970, 575.552890, 278.763570);
	  ctx.bezierCurveTo(567.036900, 278.259370, 548.962170, 275.066120, 554.523630, 256.746950);
	  ctx.bezierCurveTo(554.523630, 256.746950, 570.512820, 257.755340, 571.381790, 243.469750);
	  ctx.lineTo(569.122450, 242.629420);
	  ctx.bezierCurveTo(569.122450, 242.629420, 567.905880, 254.562100, 554.176040, 253.889830);
	  ctx.bezierCurveTo(554.176040, 253.889830, 543.748310, 251.536910, 549.657360, 240.276510);
	  ctx.lineTo(547.745610, 239.940370);
	  ctx.bezierCurveTo(547.745610, 239.940370, 540.446200, 250.192380, 551.395310, 256.410820);
	  ctx.bezierCurveTo(551.395310, 256.410820, 548.440780, 264.477970, 551.742910, 271.704800);
	  ctx.bezierCurveTo(547.398020, 273.721590, 544.269690, 268.175420, 544.269690, 268.175420);
	  ctx.lineTo(543.922110, 271.536740);
	  ctx.bezierCurveTo(547.745610, 275.906450, 551.221520, 274.729990, 552.785670, 273.889660);
	  ctx.bezierCurveTo(556.261580, 279.267760, 564.082380, 283.805540, 580.245370, 283.469410);
	  ctx.lineTo(580.071570, 370.023290);
	  ctx.lineTo(607.705050, 370.023290);
	  ctx.lineTo(604.229150, 283.469410);
	  ctx.bezierCurveTo(612.571330, 282.292950, 619.349350, 281.788750, 624.737010, 275.570310);
	  ctx.bezierCurveTo(637.250300, 278.427440, 638.293060, 262.797310, 638.293060, 262.797310);
	  ctx.closePath();
	  ctx.fill();
	}
  
	drawwindmill(){
	  // #layer9
	  
  // #g16
	  ctx.save();
	  ctx.transform(0.283366, 0.000000, 0.000000, 0.321016, 7.306000, 129.297000);
	  
  // #g3
	  
  // #polygon1
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 221, 9)';
	  ctx.moveTo(277.243000, 192.889000);
	  ctx.lineTo(321.728000, 229.820000);
	  ctx.lineTo(315.852000, 160.154000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path1
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 221, 9)';
	  ctx.moveTo(252.062000, 167.708000);
	  ctx.lineTo(298.226000, 112.311000);
	  ctx.bezierCurveTo(286.475000, 99.721000, 269.688000, 92.167000, 251.223000, 92.167000);
	  ctx.bezierCurveTo(232.758000, 92.167000, 216.810000, 99.721000, 205.059000, 112.311000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon2
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 221, 9)';
	  ctx.moveTo(180.718000, 231.498000);
	  ctx.lineTo(226.882000, 192.889000);
	  ctx.lineTo(186.593000, 159.315000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon3
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 221, 9)';
	  ctx.moveTo(174.003000, 309.557000);
	  ctx.lineTo(158.895000, 495.052000);
	  ctx.lineTo(343.551000, 495.052000);
	  ctx.lineTo(327.603000, 308.718000);
	  ctx.lineTo(252.062000, 218.069000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon4
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 255, 255)';
	  ctx.moveTo(174.003000, 309.557000);
	  ctx.lineTo(158.895000, 495.052000);
	  ctx.lineTo(184.075000, 495.052000);
	  ctx.lineTo(199.184000, 309.557000);
	  ctx.lineTo(200.862000, 117.348000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon5
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(253, 152, 8)';
	  ctx.moveTo(343.551000, 495.052000);
	  ctx.lineTo(327.603000, 308.718000);
	  ctx.lineTo(302.423000, 117.348000);
	  ctx.lineTo(301.584000, 118.187000);
	  ctx.lineTo(302.423000, 308.718000);
	  ctx.lineTo(318.370000, 495.052000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon6
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(28, 215, 89)';
	  ctx.moveTo(226.043000, 427.905000);
	  ctx.lineTo(226.043000, 495.052000);
	  ctx.lineTo(276.403000, 495.052000);
	  ctx.lineTo(276.403000, 427.905000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon7
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(21, 161, 67)';
	  ctx.moveTo(259.616000, 427.905000);
	  ctx.lineTo(259.616000, 495.052000);
	  ctx.lineTo(276.403000, 495.052000);
	  ctx.lineTo(276.403000, 427.905000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon8
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(28, 215, 89)';
	  ctx.moveTo(217.649000, 327.184000);
	  ctx.lineTo(217.649000, 377.544000);
	  ctx.lineTo(284.797000, 377.544000);
	  ctx.lineTo(284.797000, 327.184000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon9
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(21, 161, 67)';
	  ctx.moveTo(268.010000, 327.184000);
	  ctx.lineTo(268.010000, 377.544000);
	  ctx.lineTo(284.797000, 377.544000);
	  ctx.lineTo(284.797000, 327.184000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon10
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(28, 215, 89)';
	  ctx.moveTo(435.879000, 57.754000);
	  ctx.lineTo(385.518000, 7.393000);
	  ctx.lineTo(252.062000, 167.708000);
	  ctx.lineTo(116.928000, 7.393000);
	  ctx.lineTo(66.567000, 57.754000);
	  ctx.lineTo(226.882000, 192.889000);
	  ctx.lineTo(66.567000, 326.344000);
	  ctx.lineTo(116.928000, 376.705000);
	  ctx.lineTo(252.062000, 218.069000);
	  ctx.lineTo(385.518000, 376.705000);
	  ctx.lineTo(435.879000, 326.344000);
	  ctx.lineTo(277.243000, 192.889000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path10
	  ctx.beginPath();
	  ctx.moveTo(116.928000, 385.098000);
	  ctx.bezierCurveTo(114.410000, 385.098000, 112.731000, 384.259000, 111.053000, 382.580000);
	  ctx.lineTo(60.692000, 332.220000);
	  ctx.bezierCurveTo(59.013000, 330.541000, 58.174000, 328.863000, 58.174000, 326.345000);
	  ctx.bezierCurveTo(58.174000, 323.827000, 59.013000, 322.148000, 61.531000, 320.470000);
	  ctx.lineTo(213.452000, 192.890000);
	  ctx.lineTo(61.531000, 64.469000);
	  ctx.bezierCurveTo(59.013000, 62.790000, 58.174000, 60.272000, 58.174000, 58.594000);
	  ctx.bezierCurveTo(58.174000, 56.076000, 59.013000, 53.558000, 60.692000, 52.719000);
	  ctx.lineTo(111.053000, 2.358000);
	  ctx.bezierCurveTo(112.731000, -0.161000, 115.249000, -1.000000, 116.928000, -1.000000);
	  ctx.bezierCurveTo(119.446000, -1.000000, 121.125000, -0.161000, 122.803000, 2.357000);
	  ctx.lineTo(251.223000, 155.118000);
	  ctx.lineTo(378.803000, 2.357000);
	  ctx.bezierCurveTo(380.482000, 0.678000, 382.160000, -0.161000, 384.678000, -1.000000);
	  ctx.bezierCurveTo(387.196000, -1.000000, 389.714000, -0.161000, 391.393000, 1.518000);
	  ctx.lineTo(441.754000, 51.879000);
	  ctx.bezierCurveTo(443.433000, 53.558000, 444.272000, 56.076000, 444.272000, 58.594000);
	  ctx.bezierCurveTo(444.272000, 61.112000, 443.433000, 62.791000, 440.915000, 64.469000);
	  ctx.lineTo(289.833000, 192.889000);
	  ctx.lineTo(440.915000, 320.469000);
	  ctx.bezierCurveTo(442.594000, 322.148000, 443.433000, 323.826000, 444.272000, 326.344000);
	  ctx.bezierCurveTo(444.272000, 328.862000, 443.433000, 331.380000, 441.754000, 333.059000);
	  ctx.lineTo(391.393000, 383.420000);
	  ctx.bezierCurveTo(389.714000, 385.099000, 387.196000, 385.938000, 384.678000, 385.938000);
	  ctx.bezierCurveTo(382.160000, 385.938000, 380.481000, 385.099000, 378.803000, 382.581000);
	  ctx.lineTo(252.062000, 231.498000);
	  ctx.lineTo(123.643000, 382.580000);
	  ctx.bezierCurveTo(121.964000, 384.259000, 119.446000, 385.098000, 116.928000, 385.098000);
	  ctx.closePath();
	  ctx.moveTo(79.157000, 327.184000);
	  ctx.lineTo(116.927000, 364.954000);
	  ctx.lineTo(246.186000, 213.033000);
	  ctx.bezierCurveTo(247.865000, 211.354000, 250.383000, 209.676000, 252.901000, 209.676000);
	  ctx.bezierCurveTo(255.419000, 209.676000, 257.937000, 210.515000, 259.616000, 213.033000);
	  ctx.lineTo(387.196000, 364.954000);
	  ctx.lineTo(424.966000, 327.184000);
	  ctx.lineTo(271.366000, 199.604000);
	  ctx.bezierCurveTo(269.687000, 197.925000, 268.009000, 195.407000, 268.009000, 192.889000);
	  ctx.bezierCurveTo(268.009000, 190.371000, 268.848000, 187.853000, 271.366000, 186.174000);
	  ctx.lineTo(423.287000, 57.754000);
	  ctx.lineTo(385.516000, 19.984000);
	  ctx.lineTo(258.777000, 172.744000);
	  ctx.bezierCurveTo(257.098000, 174.423000, 254.580000, 176.101000, 252.062000, 176.101000);
	  ctx.bezierCurveTo(249.544000, 176.101000, 247.026000, 175.262000, 245.347000, 172.744000);
	  ctx.lineTo(116.089000, 19.984000);
	  ctx.lineTo(79.158000, 57.754000);
	  ctx.lineTo(232.758000, 187.013000);
	  ctx.bezierCurveTo(234.437000, 188.692000, 236.115000, 191.210000, 236.115000, 193.728000);
	  ctx.bezierCurveTo(236.115000, 196.246000, 235.276000, 198.764000, 232.758000, 200.443000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path11
	  ctx.beginPath();
	  ctx.moveTo(276.403000, 503.446000);
	  ctx.lineTo(226.042000, 503.446000);
	  ctx.bezierCurveTo(221.006000, 503.446000, 217.649000, 500.089000, 217.649000, 495.053000);
	  ctx.lineTo(217.649000, 427.905000);
	  ctx.bezierCurveTo(217.649000, 422.869000, 221.006000, 419.512000, 226.042000, 419.512000);
	  ctx.lineTo(276.403000, 419.512000);
	  ctx.bezierCurveTo(281.439000, 419.512000, 284.796000, 422.869000, 284.796000, 427.905000);
	  ctx.lineTo(284.796000, 495.053000);
	  ctx.bezierCurveTo(284.797000, 500.088000, 281.439000, 503.446000, 276.403000, 503.446000);
	  ctx.closePath();
	  ctx.moveTo(234.436000, 486.659000);
	  ctx.lineTo(268.010000, 486.659000);
	  ctx.lineTo(268.010000, 436.298000);
	  ctx.lineTo(234.436000, 436.298000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path12
	  ctx.beginPath();
	  ctx.moveTo(284.797000, 385.938000);
	  ctx.lineTo(217.649000, 385.938000);
	  ctx.bezierCurveTo(212.613000, 385.938000, 209.256000, 382.581000, 209.256000, 377.545000);
	  ctx.lineTo(209.256000, 327.184000);
	  ctx.bezierCurveTo(209.256000, 322.148000, 212.613000, 318.791000, 217.649000, 318.791000);
	  ctx.lineTo(284.797000, 318.791000);
	  ctx.bezierCurveTo(289.833000, 318.791000, 293.190000, 322.148000, 293.190000, 327.184000);
	  ctx.lineTo(293.190000, 377.545000);
	  ctx.bezierCurveTo(293.190000, 382.580000, 289.833000, 385.938000, 284.797000, 385.938000);
	  ctx.closePath();
	  ctx.moveTo(226.043000, 369.151000);
	  ctx.lineTo(276.404000, 369.151000);
	  ctx.lineTo(276.404000, 335.577000);
	  ctx.lineTo(226.043000, 335.577000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path13
	  ctx.beginPath();
	  ctx.moveTo(321.728000, 238.213000);
	  ctx.bezierCurveTo(320.049000, 238.213000, 317.531000, 237.374000, 316.692000, 236.534000);
	  ctx.lineTo(272.207000, 199.603000);
	  ctx.bezierCurveTo(270.528000, 197.924000, 268.850000, 195.406000, 268.850000, 192.888000);
	  ctx.bezierCurveTo(268.850000, 190.370000, 269.689000, 187.852000, 272.207000, 186.173000);
	  ctx.lineTo(310.817000, 153.439000);
	  ctx.bezierCurveTo(313.335000, 151.760000, 316.692000, 150.921000, 319.210000, 151.760000);
	  ctx.bezierCurveTo(321.728000, 152.599000, 324.246000, 155.957000, 324.246000, 158.475000);
	  ctx.lineTo(330.121000, 228.141000);
	  ctx.bezierCurveTo(330.121000, 231.498000, 328.442000, 234.856000, 325.924000, 236.534000);
	  ctx.bezierCurveTo(324.246000, 238.213000, 322.567000, 238.213000, 321.728000, 238.213000);
	  ctx.closePath();
	  ctx.moveTo(289.833000, 192.889000);
	  ctx.lineTo(310.817000, 210.515000);
	  ctx.lineTo(308.299000, 176.941000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path14
	  ctx.beginPath();
	  ctx.moveTo(252.062000, 176.102000);
	  ctx.bezierCurveTo(249.544000, 176.102000, 247.026000, 175.263000, 245.347000, 172.745000);
	  ctx.lineTo(198.344000, 117.348000);
	  ctx.bezierCurveTo(195.826000, 113.991000, 195.826000, 108.955000, 198.344000, 106.437000);
	  ctx.bezierCurveTo(212.613000, 92.168000, 231.078000, 83.775000, 251.223000, 83.775000);
	  ctx.bezierCurveTo(271.368000, 83.775000, 290.672000, 92.168000, 304.102000, 107.277000);
	  ctx.bezierCurveTo(306.620000, 110.634000, 307.459000, 114.831000, 304.102000, 118.188000);
	  ctx.lineTo(257.938000, 173.585000);
	  ctx.bezierCurveTo(257.098000, 175.262000, 254.580000, 176.102000, 252.062000, 176.102000);
	  ctx.closePath();
	  ctx.moveTo(216.810000, 113.151000);
	  ctx.lineTo(252.062000, 155.118000);
	  ctx.lineTo(286.475000, 113.990000);
	  ctx.bezierCurveTo(276.403000, 104.757000, 263.813000, 100.560000, 251.223000, 100.560000);
	  ctx.bezierCurveTo(238.633000, 100.561000, 226.043000, 104.757000, 216.810000, 113.151000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path15
	  ctx.beginPath();
	  ctx.moveTo(180.718000, 239.892000);
	  ctx.bezierCurveTo(179.039000, 239.892000, 178.200000, 239.892000, 176.521000, 239.053000);
	  ctx.bezierCurveTo(173.164000, 237.374000, 171.485000, 234.017000, 172.324000, 230.660000);
	  ctx.lineTo(178.199000, 158.476000);
	  ctx.bezierCurveTo(178.199000, 155.119000, 180.717000, 152.601000, 183.235000, 151.761000);
	  ctx.bezierCurveTo(185.753000, 150.922000, 189.110000, 150.922000, 191.628000, 153.440000);
	  ctx.lineTo(231.917000, 187.014000);
	  ctx.bezierCurveTo(233.596000, 188.693000, 235.274000, 191.211000, 235.274000, 193.729000);
	  ctx.bezierCurveTo(235.274000, 196.247000, 234.435000, 198.765000, 231.917000, 200.444000);
	  ctx.lineTo(185.753000, 239.054000);
	  ctx.bezierCurveTo(184.915000, 239.052000, 182.397000, 239.892000, 180.718000, 239.892000);
	  ctx.closePath();
	  ctx.moveTo(194.148000, 176.102000);
	  ctx.lineTo(190.791000, 212.194000);
	  ctx.lineTo(213.453000, 192.889000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path16
	  ctx.beginPath();
	  ctx.moveTo(343.551000, 503.446000);
	  ctx.lineTo(158.895000, 503.446000);
	  ctx.bezierCurveTo(156.377000, 503.446000, 154.698000, 502.607000, 153.020000, 500.928000);
	  ctx.bezierCurveTo(151.341000, 499.249000, 150.502000, 496.731000, 150.502000, 494.213000);
	  ctx.lineTo(165.610000, 308.718000);
	  ctx.bezierCurveTo(165.610000, 307.039000, 166.449000, 305.361000, 167.289000, 303.682000);
	  ctx.lineTo(244.509000, 212.193000);
	  ctx.bezierCurveTo(246.188000, 210.514000, 248.706000, 208.836000, 251.224000, 208.836000);
	  ctx.bezierCurveTo(253.742000, 208.836000, 256.260000, 209.675000, 257.939000, 212.193000);
	  ctx.lineTo(334.319000, 302.842000);
	  ctx.bezierCurveTo(335.158000, 304.521000, 335.998000, 306.199000, 335.998000, 307.878000);
	  ctx.lineTo(351.946000, 494.212000);
	  ctx.bezierCurveTo(351.946000, 496.730000, 351.107000, 499.248000, 349.428000, 500.927000);
	  ctx.bezierCurveTo(347.748000, 502.607000, 346.069000, 503.446000, 343.551000, 503.446000);
	  ctx.closePath();
	  ctx.moveTo(168.128000, 486.659000);
	  ctx.lineTo(334.318000, 486.659000);
	  ctx.lineTo(320.049000, 312.075000);
	  ctx.lineTo(252.062000, 231.498000);
	  ctx.lineTo(182.396000, 312.914000);
	  ctx.closePath();
	  ctx.fill();
	  ctx.restore();
  
	}
	
	
	drawcloud1(){
	  // #layer13
	  
  // #path2-33
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(1, 0, 2)';
	  ctx.lineWidth = 0.302347;
	  ctx.moveTo(234.856260, 40.474299);
	  ctx.bezierCurveTo(232.127820, 30.362856, 221.482770, 23.168459, 208.921690, 23.168459);
	  ctx.bezierCurveTo(199.130300, 23.168459, 190.136310, 27.705964, 185.511830, 34.852303);
	  ctx.bezierCurveTo(185.274360, 34.840823, 185.034380, 34.834553, 184.796920, 34.834553);
	  ctx.bezierCurveTo(177.810200, 34.834553, 172.127090, 39.585195, 172.127090, 45.425551);
	  ctx.bezierCurveTo(172.127090, 46.536160, 172.332060, 47.622737, 172.732020, 48.659166);
	  ctx.bezierCurveTo(164.156740, 50.095745, 157.677470, 56.439691, 157.677470, 64.024837);
	  ctx.bezierCurveTo(157.677470, 72.666269, 166.087770, 79.696634, 176.425350, 79.696634);
	  ctx.bezierCurveTo(176.774070, 79.696634, 177.129030, 79.686164, 177.502730, 79.666324);
	  ctx.bezierCurveTo(182.053470, 83.378457, 188.196530, 85.487878, 194.548310, 85.487878);
	  ctx.bezierCurveTo(197.811690, 85.487878, 201.051330, 84.936235, 204.045990, 83.877859);
	  ctx.bezierCurveTo(206.315730, 86.783409, 210.240290, 88.622239, 214.487320, 88.622239);
	  ctx.bezierCurveTo(220.852840, 88.622239, 226.121000, 84.613389, 226.865920, 79.458413);
	  ctx.bezierCurveTo(227.553340, 79.510653, 228.239510, 79.535723, 228.919430, 79.535723);
	  ctx.bezierCurveTo(242.014210, 79.535723, 252.666760, 70.631006, 252.666760, 59.684781);
	  ctx.bezierCurveTo(252.666760, 50.567974, 245.275090, 42.709090, 234.856260, 40.474293);
	  ctx.closePath();
	  ctx.moveTo(228.919430, 75.356584);
	  ctx.bezierCurveTo(227.594590, 75.356584, 226.237240, 75.230163, 224.883640, 74.981504);
	  ctx.bezierCurveTo(224.084970, 74.835235, 223.248820, 75.022254, 222.648890, 75.488226);
	  ctx.bezierCurveTo(222.048960, 75.952111, 221.757740, 76.634356, 221.871480, 77.311379);
	  ctx.bezierCurveTo(221.930180, 77.665560, 221.957680, 77.946608, 221.957680, 78.199446);
	  ctx.bezierCurveTo(221.957680, 81.643058, 218.606810, 84.444134, 214.487280, 84.444134);
	  ctx.bezierCurveTo(211.390120, 84.444134, 208.580440, 82.810091, 207.495560, 80.376779);
	  ctx.bezierCurveTo(207.240590, 79.806329, 206.701900, 79.357070, 206.018230, 79.147069);
	  ctx.bezierCurveTo(205.738260, 79.060349, 205.445790, 79.017512, 205.153320, 79.017512);
	  ctx.bezierCurveTo(204.733370, 79.017512, 204.315920, 79.105272, 203.940960, 79.279754);
	  ctx.bezierCurveTo(201.076280, 80.607679, 197.827900, 81.308729, 194.547020, 81.308729);
	  ctx.bezierCurveTo(189.085140, 81.308729, 184.023210, 79.449012, 180.292380, 76.071217);
	  ctx.bezierCurveTo(179.744940, 75.575990, 178.945030, 75.329416, 178.146370, 75.415090);
	  ctx.bezierCurveTo(177.475190, 75.484050, 176.927760, 75.517480, 176.424060, 75.517480);
	  ctx.bezierCurveTo(168.843670, 75.517480, 162.675620, 70.361458, 162.675620, 64.024828);
	  ctx.bezierCurveTo(162.675620, 57.688201, 168.843670, 52.532180, 176.351580, 52.531133);
	  ctx.bezierCurveTo(176.377880, 52.533333, 176.479060, 52.537433, 176.506560, 52.538433);
	  ctx.bezierCurveTo(177.466450, 52.570813, 178.362590, 52.140369, 178.812550, 51.430960);
	  ctx.bezierCurveTo(179.263740, 50.722595, 179.188760, 49.860646, 178.621320, 49.213922);
	  ctx.bezierCurveTo(177.642670, 48.100181, 177.125240, 46.790019, 177.125240, 45.424483);
	  ctx.bezierCurveTo(177.125240, 41.888925, 180.566100, 39.012627, 184.795620, 39.012627);
	  ctx.bezierCurveTo(185.334310, 39.012627, 185.881750, 39.062777, 186.422930, 39.160990);
	  ctx.bezierCurveTo(187.562810, 39.369944, 188.743920, 38.878895, 189.231370, 37.981424);
	  ctx.bezierCurveTo(192.732230, 31.520466, 200.460110, 27.346542, 208.921650, 27.346542);
	  ctx.bezierCurveTo(219.591690, 27.346542, 228.559440, 33.740636, 230.246750, 42.551321);
	  ctx.bezierCurveTo(230.414230, 43.426851, 231.225380, 44.119543, 232.270260, 44.276260);
	  ctx.bezierCurveTo(241.193010, 45.624037, 247.667280, 52.102758, 247.667280, 59.683725);
	  ctx.bezierCurveTo(247.667280, 68.326199, 239.256980, 75.356569, 228.919390, 75.356569);
	  ctx.closePath();
	  ctx.fill();
	  
  // #g3-5
	  ctx.save();
	  ctx.transform(2.785090, 0.000000, 0.000000, 2.785090, 187.325000, 137.511000);
	  ctx.restore();
	  
	}
  
  
  
	drawcloud2(){
	  // #layer14
	  
  // #path2-7
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(1, 0, 2)';
	  ctx.lineWidth = 0.288758;
	  ctx.moveTo(472.156070, 39.012201);
	  ctx.bezierCurveTo(469.592450, 29.196243, 459.590460, 22.212087, 447.788180, 22.212087);
	  ctx.bezierCurveTo(438.588280, 22.212087, 430.137610, 26.616993, 425.792500, 33.554495);
	  ctx.bezierCurveTo(425.569370, 33.543355, 425.343890, 33.537275, 425.120770, 33.537275);
	  ctx.bezierCurveTo(418.556110, 33.537275, 413.216320, 38.149089, 413.216320, 43.818773);
	  ctx.bezierCurveTo(413.216320, 44.896926, 413.408910, 45.951751, 413.784710, 46.957893);
	  ctx.bezierCurveTo(405.727450, 48.352491, 399.639590, 54.511047, 399.639590, 61.874533);
	  ctx.bezierCurveTo(399.639590, 70.263437, 407.541830, 77.088355, 417.254930, 77.088355);
	  ctx.bezierCurveTo(417.582580, 77.088355, 417.916090, 77.078195, 418.267220, 77.058925);
	  ctx.bezierCurveTo(422.543060, 80.662573, 428.315010, 82.710353, 434.283090, 82.710353);
	  ctx.bezierCurveTo(437.349330, 82.710353, 440.393260, 82.174829, 443.207020, 81.147386);
	  ctx.bezierCurveTo(445.339650, 83.968029, 449.027130, 85.753119, 453.017590, 85.753119);
	  ctx.bezierCurveTo(458.998590, 85.753119, 463.948490, 81.861421, 464.648410, 76.857089);
	  ctx.bezierCurveTo(465.294310, 76.907799, 465.939030, 76.932149, 466.577880, 76.932149);
	  ctx.bezierCurveTo(478.881610, 76.932149, 488.890640, 68.287653, 488.890640, 57.661308);
	  ctx.bezierCurveTo(488.890640, 48.810921, 481.945500, 41.181697, 472.156070, 39.012207);
	  ctx.closePath();
	  ctx.moveTo(466.577880, 72.875123);
	  ctx.bezierCurveTo(465.333060, 72.875123, 464.057710, 72.752397, 462.785890, 72.511005);
	  ctx.bezierCurveTo(462.035470, 72.369010, 461.249830, 72.550565, 460.686140, 73.002919);
	  ctx.bezierCurveTo(460.122450, 73.453249, 459.848820, 74.115556, 459.955680, 74.772794);
	  ctx.bezierCurveTo(460.010880, 75.116625, 460.036680, 75.389460, 460.036680, 75.634909);
	  ctx.bezierCurveTo(460.036680, 78.977893, 456.888230, 81.697110, 453.017550, 81.697110);
	  ctx.bezierCurveTo(450.107500, 81.697110, 447.467540, 80.110814, 446.448200, 77.748615);
	  ctx.bezierCurveTo(446.208640, 77.194835, 445.702490, 76.758704, 445.060110, 76.554840);
	  ctx.bezierCurveTo(444.797060, 76.470650, 444.522260, 76.429069, 444.247460, 76.429069);
	  ctx.bezierCurveTo(443.852880, 76.429069, 443.460640, 76.514269, 443.108330, 76.683648);
	  ctx.bezierCurveTo(440.416710, 77.972767, 437.364560, 78.653331, 434.281880, 78.653331);
	  ctx.bezierCurveTo(429.149940, 78.653331, 424.393800, 76.847960, 420.888350, 73.568874);
	  ctx.bezierCurveTo(420.373980, 73.088117, 419.622390, 72.848750, 418.871980, 72.931920);
	  ctx.bezierCurveTo(418.241350, 72.998860, 417.726980, 73.031320, 417.253710, 73.031320);
	  ctx.bezierCurveTo(410.131240, 73.031320, 404.335800, 68.025973, 404.335800, 61.874517);
	  ctx.bezierCurveTo(404.335800, 55.723065, 410.131240, 50.717718, 417.185600, 50.716702);
	  ctx.bezierCurveTo(417.210300, 50.718902, 417.305390, 50.722802, 417.331220, 50.723802);
	  ctx.bezierCurveTo(418.233130, 50.755232, 419.075140, 50.337371, 419.497910, 49.648694);
	  ctx.bezierCurveTo(419.921850, 48.961029, 419.851390, 48.124268, 419.318230, 47.496444);
	  ctx.bezierCurveTo(418.398710, 46.415249, 417.912530, 45.143374, 417.912530, 43.817743);
	  ctx.bezierCurveTo(417.912530, 40.385504, 421.145530, 37.593260, 425.119550, 37.593260);
	  ctx.bezierCurveTo(425.625700, 37.593260, 426.140070, 37.641950, 426.648560, 37.737286);
	  ctx.bezierCurveTo(427.719570, 37.940135, 428.829340, 37.463435, 429.287340, 36.592191);
	  ctx.bezierCurveTo(432.576710, 30.320041, 439.837760, 26.268091, 447.788140, 26.268091);
	  ctx.bezierCurveTo(457.813620, 26.268091, 466.239630, 32.475331, 467.825010, 41.028543);
	  ctx.bezierCurveTo(467.982370, 41.878487, 468.744530, 42.550937, 469.726290, 42.703074);
	  ctx.bezierCurveTo(478.110020, 44.011465, 484.193180, 50.300859, 484.193180, 57.660287);
	  ctx.bezierCurveTo(484.193180, 66.050204, 476.290940, 72.875125, 466.577840, 72.875125);
	  ctx.closePath();
	  ctx.fill();
	  
  // #g3-4
	  ctx.save();
	  ctx.transform(2.785090, 0.000000, 0.000000, 2.785090, 187.325000, 137.511000);
	  ctx.restore();
	}
  
	drawapple1(){
	  // #layer11
	  
  // #path1-3
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(226, 48, 48)';
	  ctx.lineWidth = 0.019369;
	  ctx.moveTo(557.488010, 255.973510);
	  ctx.bezierCurveTo(554.443030, 249.776970, 548.443220, 251.152260, 546.806280, 252.558460);
	  ctx.bezierCurveTo(545.654880, 253.539700, 544.565900, 253.377450, 543.359000, 252.558460);
	  ctx.bezierCurveTo(541.458480, 251.260430, 535.208980, 249.962410, 532.684210, 255.981230);
	  ctx.bezierCurveTo(529.646160, 263.228540, 533.141990, 277.591820, 539.856220, 277.591820);
	  ctx.bezierCurveTo(539.856220, 277.591820, 541.534780, 278.016770, 544.288440, 276.031100);
	  ctx.bezierCurveTo(544.780920, 275.675680, 545.419040, 275.706590, 545.876830, 276.031100);
	  ctx.bezierCurveTo(548.637430, 278.001310, 550.877820, 277.591820, 550.877820, 277.591820);
	  ctx.bezierCurveTo(556.405960, 277.583820, 560.942230, 263.019930, 557.488010, 255.973510);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path4
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(33, 31, 30)';
	  ctx.lineWidth = 0.019369;
	  ctx.moveTo(558.528430, 255.347670);
	  ctx.bezierCurveTo(556.267240, 250.742770, 552.674300, 250.055120, 550.732160, 250.055120);
	  ctx.bezierCurveTo(549.074410, 250.055120, 547.381980, 250.557330, 546.313810, 251.353150);
	  ctx.lineTo(546.313810, 250.024220);
	  ctx.bezierCurveTo(547.430540, 249.977920, 549.247820, 249.622440, 550.565690, 247.961280);
	  ctx.bezierCurveTo(551.862760, 246.331020, 552.341360, 243.889500, 551.980670, 240.698520);
	  ctx.bezierCurveTo(551.911270, 240.088130, 551.460460, 239.609100, 550.905570, 239.555020);
	  ctx.bezierCurveTo(550.905570, 239.555020, 550.746040, 239.539520, 550.468590, 239.539520);
	  ctx.bezierCurveTo(549.407350, 239.539520, 546.757730, 239.779040, 545.120790, 242.004230);
	  ctx.bezierCurveTo(544.024870, 243.495410, 543.636440, 245.527440, 543.955510, 248.046230);
	  ctx.lineTo(543.955510, 251.430360);
	  ctx.bezierCurveTo(543.081550, 250.835440, 541.326690, 250.155520, 539.245840, 250.155520);
	  ctx.bezierCurveTo(535.750000, 250.155520, 533.037960, 252.025300, 531.616040, 255.424880);
	  ctx.bezierCurveTo(529.500500, 260.462460, 530.242670, 268.876450, 533.273780, 274.169000);
	  ctx.bezierCurveTo(535.014760, 277.213190, 537.255160, 278.843440, 539.759120, 278.889800);
	  ctx.bezierCurveTo(539.877030, 278.913000, 540.057380, 278.928400, 540.293200, 278.928400);
	  ctx.bezierCurveTo(541.090860, 278.928400, 542.748610, 278.696620, 544.933510, 277.120440);
	  ctx.bezierCurveTo(545.065300, 277.027740, 545.176280, 277.074140, 545.245640, 277.120440);
	  ctx.bezierCurveTo(547.444410, 278.688890, 549.386540, 278.928400, 550.350670, 278.928400);
	  ctx.bezierCurveTo(550.635050, 278.928400, 550.850070, 278.905200, 550.974930, 278.889800);
	  ctx.bezierCurveTo(553.180630, 278.843500, 555.330850, 277.066380, 557.037150, 273.867670);
	  ctx.bezierCurveTo(559.742270, 268.776020, 561.039330, 260.462460, 558.528430, 255.347620);
	  ctx.closePath();
	  ctx.moveTo(546.951940, 243.665440);
	  ctx.bezierCurveTo(547.694110, 242.653280, 548.907950, 242.321050, 549.733350, 242.212880);
	  ctx.bezierCurveTo(549.795750, 244.020850, 549.483650, 245.365230, 548.803900, 246.222860);
	  ctx.bezierCurveTo(548.089470, 247.119110, 547.062920, 247.366350, 546.258320, 247.404990);
	  ctx.bezierCurveTo(546.084920, 245.774730, 546.320720, 244.515330, 546.951940, 243.665440);
	  ctx.closePath();
	  ctx.moveTo(555.004850, 272.523340);
	  ctx.bezierCurveTo(553.735530, 274.903050, 552.237310, 276.262890, 550.891690, 276.262890);
	  ctx.bezierCurveTo(550.836190, 276.262890, 550.766840, 276.270890, 550.711360, 276.278390);
	  ctx.bezierCurveTo(550.676660, 276.286390, 550.551820, 276.301590, 550.350670, 276.301590);
	  ctx.bezierCurveTo(549.643180, 276.301590, 548.214320, 276.123890, 546.521900, 274.910850);
	  ctx.bezierCurveTo(545.675680, 274.308190, 544.503470, 274.300470, 543.657260, 274.910850);
	  ctx.bezierCurveTo(541.916270, 276.162520, 540.730180, 276.301590, 540.300140, 276.301590);
	  ctx.bezierCurveTo(540.209940, 276.301590, 540.140610, 276.293590, 540.126730, 276.293590);
	  ctx.bezierCurveTo(540.043530, 276.270390, 539.953330, 276.262690, 539.863160, 276.262690);
	  ctx.bezierCurveTo(537.719880, 276.262690, 536.180050, 274.354280, 535.264470, 272.762650);
	  ctx.bezierCurveTo(532.663400, 268.211830, 531.969780, 260.786820, 533.752380, 256.537330);
	  ctx.bezierCurveTo(535.056390, 253.431330, 537.463240, 252.782320, 539.245840, 252.782320);
	  ctx.bezierCurveTo(540.744050, 252.782320, 542.110490, 253.245900, 542.748610, 253.686300);
	  ctx.bezierCurveTo(544.510400, 254.891610, 546.091850, 254.837530, 547.527650, 253.609000);
	  ctx.bezierCurveTo(547.957690, 253.238140, 549.171520, 252.689570, 550.732160, 252.689570);
	  ctx.bezierCurveTo(552.466210, 252.689570, 554.866130, 253.369480, 556.461450, 256.614550);
	  ctx.bezierCurveTo(558.542310, 260.840860, 557.321540, 268.165430, 555.004850, 272.523100);
	  ctx.closePath();
	  ctx.fill();
  
	}
	
  
	drawapple2(){
	  // #layer12
	  
  // #path1-08
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(226, 48, 48)';
	  ctx.lineWidth = 0.021487;
	  ctx.moveTo(591.685110, 205.368150);
	  ctx.bezierCurveTo(588.343600, 198.419360, 581.759520, 199.961610, 579.963170, 201.538510);
	  ctx.bezierCurveTo(578.699640, 202.638890, 577.504610, 202.456930, 576.180180, 201.538510);
	  ctx.bezierCurveTo(574.094590, 200.082900, 567.236500, 198.627300, 564.465860, 205.376810);
	  ctx.bezierCurveTo(561.131960, 213.503960, 564.968230, 229.610950, 572.336310, 229.610950);
	  ctx.bezierCurveTo(572.336310, 229.610950, 574.178320, 230.087490, 577.200150, 227.860760);
	  ctx.bezierCurveTo(577.740570, 227.462200, 578.440840, 227.496850, 578.943220, 227.860760);
	  ctx.bezierCurveTo(581.972650, 230.070160, 584.431210, 229.610950, 584.431210, 229.610950);
	  ctx.bezierCurveTo(590.497690, 229.601950, 595.475710, 213.270020, 591.685110, 205.368150);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path4-4
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(33, 31, 30)';
	  ctx.lineWidth = 0.021487;
	  ctx.moveTo(592.826850, 204.666340);
	  ctx.bezierCurveTo(590.345460, 199.502400, 586.402620, 198.731270, 584.271370, 198.731270);
	  ctx.bezierCurveTo(582.452180, 198.731270, 580.594940, 199.294450, 579.422740, 200.186880);
	  ctx.lineTo(579.422740, 198.696610);
	  ctx.bezierCurveTo(580.648220, 198.644610, 582.642470, 198.246070, 584.088690, 196.383230);
	  ctx.bezierCurveTo(585.512060, 194.555060, 586.037270, 191.817130, 585.641460, 188.238760);
	  ctx.bezierCurveTo(585.565360, 187.554280, 585.070590, 187.017090, 584.461660, 186.956440);
	  ctx.bezierCurveTo(584.461660, 186.956440, 584.286590, 186.939140, 583.982130, 186.939140);
	  ctx.bezierCurveTo(582.817540, 186.939140, 579.909890, 187.207730, 578.113550, 189.703060);
	  ctx.bezierCurveTo(576.910910, 191.375280, 576.484650, 193.654000, 576.834790, 196.478570);
	  ctx.lineTo(576.834790, 200.273550);
	  ctx.bezierCurveTo(575.875720, 199.606390, 573.949970, 198.843930, 571.666470, 198.843930);
	  ctx.bezierCurveTo(567.830210, 198.843930, 564.854060, 200.940700, 563.293670, 204.753010);
	  ctx.bezierCurveTo(560.972120, 210.402150, 561.786560, 219.837610, 565.112850, 225.772680);
	  ctx.bezierCurveTo(567.023370, 229.186430, 569.481940, 231.014610, 572.229740, 231.066590);
	  ctx.bezierCurveTo(572.359140, 231.092590, 572.557040, 231.109890, 572.815840, 231.109890);
	  ctx.bezierCurveTo(573.691180, 231.109890, 575.510360, 230.849960, 577.908030, 229.082440);
	  ctx.bezierCurveTo(578.052650, 228.978460, 578.174440, 229.030440, 578.250550, 229.082440);
	  ctx.bezierCurveTo(580.663440, 230.841300, 582.794710, 231.109890, 583.852730, 231.109890);
	  ctx.bezierCurveTo(584.164800, 231.109890, 584.400760, 231.083890, 584.537780, 231.066590);
	  ctx.bezierCurveTo(586.958270, 231.014590, 589.317880, 229.021810, 591.190350, 225.434770);
	  ctx.bezierCurveTo(594.158890, 219.724970, 595.582280, 210.402150, 592.826850, 204.666370);
	  ctx.closePath();
	  ctx.moveTo(580.123020, 191.565870);
	  ctx.bezierCurveTo(580.937470, 190.430840, 582.269510, 190.058270, 583.175290, 189.936980);
	  ctx.bezierCurveTo(583.243790, 191.964430, 582.901270, 193.472020, 582.155320, 194.433760);
	  ctx.bezierCurveTo(581.371330, 195.438820, 580.244800, 195.716080, 579.361850, 195.759410);
	  ctx.bezierCurveTo(579.171560, 193.931230, 579.430350, 192.518950, 580.123020, 191.565870);
	  ctx.closePath();
	  ctx.moveTo(588.960140, 223.927150);
	  ctx.bezierCurveTo(587.567210, 226.595770, 585.923100, 228.120690, 584.446440, 228.120690);
	  ctx.bezierCurveTo(584.385540, 228.120690, 584.309420, 228.129690, 584.248530, 228.137990);
	  ctx.bezierCurveTo(584.210430, 228.146990, 584.073470, 228.163990, 583.852730, 228.163990);
	  ctx.bezierCurveTo(583.076340, 228.163990, 581.508330, 227.964710, 579.651090, 226.604410);
	  ctx.bezierCurveTo(578.722480, 225.928590, 577.436110, 225.919920, 576.507480, 226.604410);
	  ctx.bezierCurveTo(574.596960, 228.008030, 573.295370, 228.163990, 572.823450, 228.163990);
	  ctx.bezierCurveTo(572.724450, 228.163990, 572.648380, 228.154990, 572.633150, 228.154990);
	  ctx.bezierCurveTo(572.541850, 228.128990, 572.442870, 228.120390, 572.343910, 228.120390);
	  ctx.bezierCurveTo(569.991910, 228.120390, 568.302130, 225.980300, 567.297390, 224.195450);
	  ctx.bezierCurveTo(564.443030, 219.092160, 563.681860, 210.765730, 565.638050, 206.000350);
	  ctx.bezierCurveTo(567.069050, 202.517290, 569.710290, 201.789480, 571.666470, 201.789480);
	  ctx.bezierCurveTo(573.310600, 201.789480, 574.810090, 202.309340, 575.510360, 202.803200);
	  ctx.bezierCurveTo(577.443720, 204.154850, 579.179180, 204.094190, 580.754780, 202.716600);
	  ctx.bezierCurveTo(581.226710, 202.300720, 582.558750, 201.685550, 584.271370, 201.685550);
	  ctx.bezierCurveTo(586.174280, 201.685550, 588.807910, 202.448010, 590.558580, 206.087030);
	  ctx.bezierCurveTo(592.842080, 210.826420, 591.502430, 219.040210, 588.960140, 223.926890);
	  ctx.closePath();
	  ctx.fill();
	}
  
  
  
  
	drawboat(){
	  // #layer15
	  
  // #g21
	  ctx.save();
	  ctx.transform(0.135025, 0.000000, 0.000000, 0.172492, 204.675000, 212.766000);
	  
  // #g2
	  
  // #path1-2
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(253, 204, 0)';
	  ctx.moveTo(173.968000, 89.615000);
	  ctx.bezierCurveTo(179.088000, 85.348000, 183.355000, 79.375000, 183.355000, 71.695000);
	  ctx.lineTo(183.355000, 71.695000);
	  ctx.bezierCurveTo(183.355000, 64.015000, 181.648000, 57.188000, 177.382000, 51.215000);
	  ctx.bezierCurveTo(151.782000, 17.935000, 137.275000, 42.682000, 137.275000, 42.682000);
	  ctx.bezierCurveTo(146.662000, 41.829000, 152.635000, 49.509000, 152.635000, 58.895000);
	  ctx.bezierCurveTo(152.635000, 68.281000, 147.515000, 73.402000, 137.275000, 75.108000);
	  ctx.bezierCurveTo(122.768000, 77.668000, 111.675000, 86.201000, 110.822000, 100.708000);
	  ctx.bezierCurveTo(109.969000, 115.215000, 122.769000, 128.015000, 138.129000, 128.015000);
	  ctx.lineTo(172.262000, 128.015000);
	  ctx.bezierCurveTo(179.089000, 128.015000, 185.915000, 122.895000, 185.915000, 115.215000);
	  ctx.bezierCurveTo(186.768000, 104.122000, 185.915000, 97.295000, 173.968000, 89.615000);
	  ctx.fill();
	  
  // #path2-9
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(253, 204, 0)';
	  ctx.moveTo(161.168000, 94.735000);
	  ctx.bezierCurveTo(166.288000, 94.735000, 170.555000, 93.028000, 173.968000, 90.468000);
	  ctx.fill();
	  
  // #g3-8
	  
  // #polygon2-1
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 225, 0)';
	  ctx.moveTo(127.035000, 272.228000);
	  ctx.lineTo(178.235000, 272.228000);
	  ctx.lineTo(178.235000, 169.828000);
	  ctx.lineTo(127.035000, 169.828000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon3-1
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 225, 0)';
	  ctx.moveTo(246.501000, 272.228000);
	  ctx.lineTo(297.701000, 272.228000);
	  ctx.lineTo(297.701000, 118.628000);
	  ctx.lineTo(246.501000, 118.628000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon4-6
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 168, 0)';
	  ctx.moveTo(280.635000, 272.228000);
	  ctx.lineTo(297.701000, 272.228000);
	  ctx.lineTo(297.701000, 118.628000);
	  ctx.lineTo(280.635000, 118.628000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon5-1
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 225, 0)';
	  ctx.moveTo(348.901000, 477.028000);
	  ctx.lineTo(84.368000, 477.028000);
	  ctx.lineTo(7.568000, 391.695000);
	  ctx.lineTo(502.501000, 391.695000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon6-1
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 255, 255)';
	  ctx.moveTo(7.568000, 391.695000);
	  ctx.lineTo(84.368000, 477.028000);
	  ctx.lineTo(109.968000, 477.028000);
	  ctx.lineTo(33.168000, 391.695000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon7-8
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 168, 0)';
	  ctx.moveTo(468.368000, 391.695000);
	  ctx.lineTo(314.768000, 477.028000);
	  ctx.lineTo(357.435000, 477.028000);
	  ctx.lineTo(511.035000, 391.695000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon8-1
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 225, 0)';
	  ctx.moveTo(425.701000, 391.695000);
	  ctx.lineTo(58.768000, 391.695000);
	  ctx.lineTo(58.768000, 272.228000);
	  ctx.lineTo(365.968000, 272.228000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon9-1
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 255, 255)';
	  ctx.moveTo(58.768000, 391.695000);
	  ctx.lineTo(75.835000, 391.695000);
	  ctx.lineTo(75.835000, 272.228000);
	  ctx.lineTo(58.768000, 272.228000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon10-5
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(255, 168, 0)';
	  ctx.moveTo(365.968000, 272.228000);
	  ctx.lineTo(348.901000, 272.228000);
	  ctx.lineTo(408.635000, 391.695000);
	  ctx.lineTo(425.701000, 391.695000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #g13
	  
  // #polygon11
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(99, 211, 253)';
	  ctx.moveTo(152.635000, 357.562000);
	  ctx.lineTo(212.368000, 357.562000);
	  ctx.lineTo(212.368000, 306.362000);
	  ctx.lineTo(152.635000, 306.362000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon12
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(99, 211, 253)';
	  ctx.moveTo(92.901000, 357.562000);
	  ctx.lineTo(152.635000, 357.562000);
	  ctx.lineTo(152.635000, 306.362000);
	  ctx.lineTo(92.901000, 306.362000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #polygon13
	  ctx.beginPath();
	  ctx.fillStyle = 'rgb(99, 211, 253)';
	  ctx.moveTo(365.968000, 357.562000);
	  ctx.lineTo(246.501000, 357.562000);
	  ctx.lineTo(246.501000, 306.362000);
	  ctx.lineTo(340.368000, 306.362000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path13-0
	  ctx.beginPath();
	  ctx.moveTo(348.901000, 485.562000);
	  ctx.lineTo(84.368000, 485.562000);
	  ctx.bezierCurveTo(81.808000, 485.562000, 79.248000, 484.709000, 78.395000, 483.002000);
	  ctx.lineTo(1.595000, 397.669000);
	  ctx.bezierCurveTo(-0.965000, 395.109000, -1.818000, 391.696000, -0.112000, 388.282000);
	  ctx.bezierCurveTo(0.741000, 384.869000, 4.155000, 383.162000, 7.568000, 383.162000);
	  ctx.lineTo(502.501000, 383.162000);
	  ctx.bezierCurveTo(506.768000, 383.162000, 510.181000, 385.722000, 511.034000, 389.135000);
	  ctx.bezierCurveTo(511.887000, 392.548000, 510.181000, 396.815000, 506.767000, 398.522000);
	  ctx.lineTo(353.167000, 483.855000);
	  ctx.bezierCurveTo(351.461000, 485.562000, 350.608000, 485.562000, 348.901000, 485.562000);
	  ctx.closePath();
	  ctx.moveTo(87.781000, 468.495000);
	  ctx.lineTo(346.341000, 468.495000);
	  ctx.lineTo(469.221000, 400.228000);
	  ctx.lineTo(26.341000, 400.228000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path14-0
	  ctx.beginPath();
	  ctx.moveTo(425.701000, 400.228000);
	  ctx.lineTo(58.768000, 400.228000);
	  ctx.bezierCurveTo(53.648000, 400.228000, 50.235000, 396.815000, 50.235000, 391.695000);
	  ctx.lineTo(50.235000, 272.228000);
	  ctx.bezierCurveTo(50.235000, 267.108000, 53.648000, 263.695000, 58.768000, 263.695000);
	  ctx.lineTo(365.968000, 263.695000);
	  ctx.bezierCurveTo(369.381000, 263.695000, 371.941000, 265.402000, 373.648000, 268.815000);
	  ctx.lineTo(433.381000, 388.282000);
	  ctx.bezierCurveTo(435.088000, 390.842000, 434.234000, 394.255000, 433.381000, 396.815000);
	  ctx.bezierCurveTo(432.528000, 399.375000, 428.261000, 400.228000, 425.701000, 400.228000);
	  ctx.closePath();
	  ctx.moveTo(67.301000, 383.162000);
	  ctx.lineTo(412.048000, 383.162000);
	  ctx.lineTo(360.848000, 280.762000);
	  ctx.lineTo(67.301000, 280.762000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path15-8
	  ctx.beginPath();
	  ctx.moveTo(212.368000, 366.095000);
	  ctx.lineTo(152.635000, 366.095000);
	  ctx.bezierCurveTo(147.515000, 366.095000, 144.102000, 362.682000, 144.102000, 357.562000);
	  ctx.lineTo(144.102000, 306.362000);
	  ctx.bezierCurveTo(144.102000, 301.242000, 147.515000, 297.829000, 152.635000, 297.829000);
	  ctx.lineTo(212.368000, 297.829000);
	  ctx.bezierCurveTo(217.488000, 297.829000, 220.901000, 301.242000, 220.901000, 306.362000);
	  ctx.lineTo(220.901000, 357.562000);
	  ctx.bezierCurveTo(220.901000, 362.682000, 217.488000, 366.095000, 212.368000, 366.095000);
	  ctx.closePath();
	  ctx.moveTo(161.168000, 349.028000);
	  ctx.lineTo(203.835000, 349.028000);
	  ctx.lineTo(203.835000, 314.895000);
	  ctx.lineTo(161.168000, 314.895000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path16-3
	  ctx.beginPath();
	  ctx.moveTo(152.635000, 366.095000);
	  ctx.lineTo(92.901000, 366.095000);
	  ctx.bezierCurveTo(87.781000, 366.095000, 84.368000, 362.682000, 84.368000, 357.562000);
	  ctx.lineTo(84.368000, 306.362000);
	  ctx.bezierCurveTo(84.368000, 301.242000, 87.781000, 297.829000, 92.901000, 297.829000);
	  ctx.lineTo(152.634000, 297.829000);
	  ctx.bezierCurveTo(157.754000, 297.829000, 161.167000, 301.242000, 161.167000, 306.362000);
	  ctx.lineTo(161.167000, 357.562000);
	  ctx.bezierCurveTo(161.168000, 362.682000, 157.755000, 366.095000, 152.635000, 366.095000);
	  ctx.closePath();
	  ctx.moveTo(101.435000, 349.028000);
	  ctx.lineTo(144.102000, 349.028000);
	  ctx.lineTo(144.102000, 314.895000);
	  ctx.lineTo(101.435000, 314.895000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path17
	  ctx.beginPath();
	  ctx.moveTo(365.968000, 366.095000);
	  ctx.lineTo(246.501000, 366.095000);
	  ctx.bezierCurveTo(241.381000, 366.095000, 237.968000, 362.682000, 237.968000, 357.562000);
	  ctx.lineTo(237.968000, 306.362000);
	  ctx.bezierCurveTo(237.968000, 301.242000, 241.381000, 297.829000, 246.501000, 297.829000);
	  ctx.lineTo(340.368000, 297.829000);
	  ctx.bezierCurveTo(343.781000, 297.829000, 346.341000, 299.536000, 348.048000, 302.949000);
	  ctx.lineTo(373.648000, 354.149000);
	  ctx.bezierCurveTo(375.355000, 356.709000, 374.501000, 360.122000, 373.648000, 362.682000);
	  ctx.bezierCurveTo(372.795000, 365.242000, 368.528000, 366.095000, 365.968000, 366.095000);
	  ctx.closePath();
	  ctx.moveTo(255.035000, 349.028000);
	  ctx.lineTo(352.315000, 349.028000);
	  ctx.lineTo(335.248000, 314.895000);
	  ctx.lineTo(255.035000, 314.895000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path18
	  ctx.beginPath();
	  ctx.moveTo(178.235000, 280.762000);
	  ctx.lineTo(127.035000, 280.762000);
	  ctx.bezierCurveTo(121.915000, 280.762000, 118.502000, 277.349000, 118.502000, 272.229000);
	  ctx.lineTo(118.502000, 169.829000);
	  ctx.bezierCurveTo(118.502000, 164.709000, 121.915000, 161.296000, 127.035000, 161.296000);
	  ctx.lineTo(178.235000, 161.296000);
	  ctx.bezierCurveTo(183.355000, 161.296000, 186.768000, 164.709000, 186.768000, 169.829000);
	  ctx.lineTo(186.768000, 272.229000);
	  ctx.bezierCurveTo(186.768000, 277.348000, 183.355000, 280.762000, 178.235000, 280.762000);
	  ctx.closePath();
	  ctx.moveTo(135.568000, 263.695000);
	  ctx.lineTo(169.701000, 263.695000);
	  ctx.lineTo(169.701000, 178.362000);
	  ctx.lineTo(135.568000, 178.362000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path19
	  ctx.beginPath();
	  ctx.moveTo(297.701000, 280.762000);
	  ctx.lineTo(246.501000, 280.762000);
	  ctx.bezierCurveTo(241.381000, 280.762000, 237.968000, 277.349000, 237.968000, 272.229000);
	  ctx.lineTo(237.968000, 118.629000);
	  ctx.bezierCurveTo(237.968000, 113.509000, 241.381000, 110.096000, 246.501000, 110.096000);
	  ctx.lineTo(297.701000, 110.096000);
	  ctx.bezierCurveTo(302.821000, 110.096000, 306.234000, 113.509000, 306.234000, 118.629000);
	  ctx.lineTo(306.234000, 272.229000);
	  ctx.bezierCurveTo(306.235000, 277.348000, 302.821000, 280.762000, 297.701000, 280.762000);
	  ctx.closePath();
	  ctx.moveTo(255.035000, 263.695000);
	  ctx.lineTo(289.168000, 263.695000);
	  ctx.lineTo(289.168000, 127.162000);
	  ctx.lineTo(255.035000, 127.162000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path20
	  ctx.beginPath();
	  ctx.moveTo(173.115000, 135.695000);
	  ctx.lineTo(138.982000, 135.695000);
	  ctx.bezierCurveTo(129.595000, 135.695000, 120.209000, 131.428000, 113.382000, 124.602000);
	  ctx.bezierCurveTo(106.555000, 117.775000, 103.142000, 109.242000, 103.995000, 99.855000);
	  ctx.bezierCurveTo(104.848000, 82.788000, 117.648000, 69.135000, 137.275000, 66.575000);
	  ctx.bezierCurveTo(143.248000, 64.868000, 144.102000, 62.308000, 144.102000, 58.895000);
	  ctx.bezierCurveTo(144.102000, 54.628000, 141.542000, 50.362000, 137.275000, 50.362000);
	  ctx.bezierCurveTo(133.862000, 50.362000, 131.302000, 48.655000, 129.595000, 46.095000);
	  ctx.bezierCurveTo(127.888000, 43.535000, 127.888000, 40.122000, 129.595000, 37.562000);
	  ctx.bezierCurveTo(130.448000, 36.709000, 137.275000, 25.615000, 150.075000, 24.762000);
	  ctx.bezierCurveTo(161.168000, 23.909000, 172.262000, 30.735000, 183.355000, 45.242000);
	  ctx.bezierCurveTo(188.475000, 52.069000, 191.035000, 61.455000, 191.035000, 70.842000);
	  ctx.bezierCurveTo(191.035000, 76.815000, 189.328000, 82.789000, 185.915000, 87.909000);
	  ctx.bezierCurveTo(193.595000, 95.589000, 194.448000, 104.122000, 194.448000, 113.509000);
	  ctx.bezierCurveTo(195.301000, 126.308000, 185.061000, 135.695000, 173.115000, 135.695000);
	  ctx.closePath();
	  ctx.moveTo(156.048000, 42.682000);
	  ctx.bezierCurveTo(159.461000, 46.949000, 161.168000, 52.922000, 161.168000, 58.895000);
	  ctx.bezierCurveTo(161.168000, 71.695000, 152.635000, 81.082000, 138.981000, 82.788000);
	  ctx.bezierCurveTo(134.714000, 83.641000, 120.208000, 87.055000, 120.208000, 99.855000);
	  ctx.bezierCurveTo(120.208000, 104.122000, 121.915000, 109.242000, 125.328000, 112.655000);
	  ctx.bezierCurveTo(128.741000, 116.068000, 133.861000, 118.628000, 138.981000, 118.628000);
	  ctx.lineTo(173.114000, 118.628000);
	  ctx.bezierCurveTo(175.674000, 118.628000, 178.234000, 116.921000, 178.234000, 114.361000);
	  ctx.bezierCurveTo(178.234000, 105.828000, 178.234000, 102.414000, 169.701000, 97.294000);
	  ctx.bezierCurveTo(167.141000, 95.587000, 166.288000, 93.027000, 165.434000, 90.467000);
	  ctx.bezierCurveTo(165.434000, 87.907000, 166.287000, 85.347000, 168.847000, 83.640000);
	  ctx.bezierCurveTo(172.260000, 81.080000, 174.820000, 76.813000, 174.820000, 72.547000);
	  ctx.bezierCurveTo(174.820000, 68.280000, 173.967000, 61.454000, 170.553000, 57.187000);
	  ctx.bezierCurveTo(165.435000, 48.655000, 160.315000, 44.388000, 156.048000, 42.682000);
	  ctx.closePath();
	  ctx.fill();
	  
  // #path21
	  ctx.beginPath();
	  ctx.moveTo(161.168000, 103.268000);
	  ctx.bezierCurveTo(156.901000, 103.268000, 152.635000, 99.855000, 152.635000, 95.588000);
	  ctx.bezierCurveTo(152.635000, 90.468000, 156.048000, 87.055000, 160.315000, 86.201000);
	  ctx.bezierCurveTo(163.728000, 86.201000, 166.288000, 85.348000, 168.848000, 82.788000);
	  ctx.bezierCurveTo(173.115000, 80.228000, 178.235000, 81.081000, 181.648000, 84.495000);
	  ctx.bezierCurveTo(184.208000, 87.908000, 183.355000, 93.882000, 179.941000, 96.442000);
	  ctx.bezierCurveTo(173.968000, 100.708000, 167.995000, 102.415000, 161.168000, 103.268000);
	  ctx.closePath();
	  ctx.fill();
	  ctx.restore();
	  
	}
  
  
  
	
	 
	
  
  
  
  
	clearCanvas() {
	  const canvas = this.el;
	  const ctx = canvas.getContext('2d');
	  ctx.clearRect(0, 0, canvas.width, canvas.height);
	}
  
  
  
  
  
	startRace() {
  
	  this.clearCanvas();
	  this.drawLand();
	  this.drawtree();
	  this.drawwindmill();
	  this.drawcloud1();
	  this.drawcloud2();
	  this.drawapple1();
	  this.drawapple2();
	  this.drawboat();
	  
	
	}
  
	
  }
  
  const scene = new Clock('#scenecanvas');
  scene.startRace();
  //this.drawtree();
  
  